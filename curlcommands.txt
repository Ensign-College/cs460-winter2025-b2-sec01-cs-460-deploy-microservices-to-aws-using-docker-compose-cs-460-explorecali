# Create a tour package (NO-AUTH)
curl -i -X POST http://localhost:8080/packages \
  -H 'Content-Type: application/json' \
  -d '{"code":"BB","name":"Beekeepers you Betcha"}'
# Expect: HTTP/1.1 401

# Create a tour package (USER)
curl -i -u user:password -X POST http://localhost:8080/packages \
  -H 'Content-Type: application/json' \
  -d '{"code":"BB","name":"Beekeepers you Betcha"}'
# Expect: HTTP/1.1 403

# Create a tour package (ADMIN)
curl -i -u admin:admin123 -X POST http://localhost:8080/packages \
  -H 'Content-Type: application/json' \
  -d '{"code":"BB","name":"Beekeepers you Betcha"}'
# Expect: HTTP/1.1 201 (or 200/204 depending on controller)

# List tour packages (NO-AUTH)
curl -i http://localhost:8080/packages
# Expect: HTTP/1.1 401

# List tour packages (USER)
curl -i -u user:password http://localhost:8080/packages
# Expect: HTTP/1.1 200

# List tour packages (ADMIN)
curl -i -u admin:admin123 http://localhost:8080/packages
# Expect: HTTP/1.1 200

# Delete a tour package (NO-AUTH)
curl -i -X DELETE http://localhost:8080/packages/BB
# Expect: HTTP/1.1 401

# Delete a tour package (USER)
curl -i -u user:password -X DELETE http://localhost:8080/packages/BB
# Expect: HTTP/1.1 403

# Delete a tour package (ADMIN)
curl -i -u admin:admin123 -X DELETE http://localhost:8080/packages/BB
# Expect: HTTP/1.1 204 (or 200)  # if not found you may see 404

# Get top-N recommendations (NO-AUTH)
curl -i -X GET http://localhost:8080/recommendations/top/5
# Expect: HTTP/1.1 401

# Get top-N recommendations (USER)
curl -i -u user:password -X GET http://localhost:8080/recommendations/top/5
# Expect: HTTP/1.1 200

# Get top-N recommendations (ADMIN)
curl -i -u admin:admin123 -X GET http://localhost:8080/recommendations/top/5
# Expect: HTTP/1.1 200

# Get customer-specific recommendations (NO-AUTH)
curl -i -X GET "http://localhost:8080/recommendations/customer/5?limit=5"
# Expect: HTTP/1.1 401

# Get customer-specific recommendations (USER)
curl -i -u user:password -X GET "http://localhost:8080/recommendations/customer/5?limit=5"
# Expect: HTTP/1.1 200

# Get customer-specific recommendations (ADMIN)
curl -i -u admin:admin123 -X GET "http://localhost:8080/recommendations/customer/5?limit=5"
# Expect: HTTP/1.1 200


# =========================================================
# TOUR RATINGS ENDPOINTS (as in TourRatingControllerTest)
#   Base: /tours/{tourId}/ratings
#   Using TOUR_ID=999, CUSTOMER_ID=1000
# =========================================================

# Create rating (NO-AUTH)
curl -i -X POST http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"score":3,"comment":"comment","customerId":1000}'
# Expect: HTTP/1.1 401

# Create rating (USER)
curl -i -u user:password -X POST http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"score":3,"comment":"comment","customerId":1000}'
# Expect: HTTP/1.1 403

# Create rating (ADMIN)
curl -i -u admin:admin123 -X POST http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"score":3,"comment":"comment","customerId":1000}'
# Expect: HTTP/1.1 201 (or 200)

# Delete rating by customer (NO-AUTH)
curl -i -X DELETE http://localhost:8080/tours/999/ratings/1000
# Expect: HTTP/1.1 401

# Delete rating by customer (USER)
curl -i -u user:password -X DELETE http://localhost:8080/tours/999/ratings/1000
# Expect: HTTP/1.1 403

# Delete rating by customer (ADMIN)
curl -i -u admin:admin123 -X DELETE http://localhost:8080/tours/999/ratings/1000
# Expect: HTTP/1.1 204 (or 200)  # 404 if not found

# List ratings for a tour (NO-AUTH)
curl -i http://localhost:8080/tours/999/ratings
# Expect: HTTP/1.1 401

# List ratings for a tour (USER)
curl -i -u user:password http://localhost:8080/tours/999/ratings
# Expect: HTTP/1.1 200  # 404 if tour not found per controller logic

# List ratings for a tour (ADMIN)
curl -i -u admin:admin123 http://localhost:8080/tours/999/ratings
# Expect: HTTP/1.1 200

# Get average rating for a tour (NO-AUTH)
curl -i http://localhost:8080/tours/999/ratings/average
# Expect: HTTP/1.1 401

# Get average rating for a tour (USER)
curl -i -u user:password http://localhost:8080/tours/999/ratings/average
# Expect: HTTP/1.1 200  # 404 if tour not found per controller logic

# Get average rating for a tour (ADMIN)
curl -i -u admin:admin123 http://localhost:8080/tours/999/ratings/average
# Expect: HTTP/1.1 200

# Partially update rating (NO-AUTH)
curl -i -X PATCH http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"score":3,"comment":"comment","customerId":1000}'
# Expect: HTTP/1.1 401

# Partially update rating (USER)
curl -i -u user:password -X PATCH http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"score":3,"comment":"comment","customerId":1000}'
# Expect: HTTP/1.1 403

# Partially update rating (ADMIN)
curl -i -u admin:admin123 -X PATCH http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"score":3,"comment":"comment","customerId":1000}'
# Expect: HTTP/1.1 200

# Partially update rating (ADMIN) â€” example minimal body
curl -i -u admin:admin123 -X PATCH http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"comment":"updated comment"}'
# Expect: HTTP/1.1 200

# Fully update rating (NO-AUTH)
curl -i -X PUT http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"score":3,"comment":"comment","customerId":1000}'
# Expect: HTTP/1.1 401

# Fully update rating (USER)
curl -i -u user:password -X PUT http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"score":3,"comment":"comment","customerId":1000}'
# Expect: HTTP/1.1 403

# Fully update rating (ADMIN)
curl -i -u admin:admin123 -X PUT http://localhost:8080/tours/999/ratings \
  -H 'Content-Type: application/json' \
  -d '{"score":3,"comment":"comment","customerId":1000}'
# Expect: HTTP/1.1 200

# Batch create ratings (NO-AUTH)
curl -i -X POST "http://localhost:8080/tours/999/ratings/batch?score=3" \
  -H 'Content-Type: application/json' \
  -d '[123,456]'
# Expect: HTTP/1.1 401

# Batch create ratings (USER)
curl -i -u user:password -X POST "http://localhost:8080/tours/999/ratings/batch?score=3" \
  -H 'Content-Type: application/json' \
  -d '[123,456]'
# Expect: HTTP/1.1 403

# Batch create ratings (ADMIN)
curl -i -u admin:admin123 -X POST "http://localhost:8080/tours/999/ratings/batch?score=3" \
  -H 'Content-Type: application/json' \
  -d '[123,456]'
# Expect: HTTP/1.1 200 (or 201)
